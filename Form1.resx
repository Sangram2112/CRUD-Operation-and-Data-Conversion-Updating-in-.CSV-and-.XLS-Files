<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btCsv.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>